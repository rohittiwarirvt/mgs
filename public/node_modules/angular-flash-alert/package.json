{
  "name": "angular-flash-alert",
  "version": "2.3.0",
  "description": "Flash message for AngularJS and Bootstrap",
  "keywords": [
    "angular-flash",
    "flash",
    "message",
    "alert",
    "angularjs",
    "bootstrap"
  ],
  "homepage": "https://github.com/sachinchoolur/angular-flash",
  "bugs": {
    "url": "https://github.com/sachinchoolur/angular-flash/issues",
    "email": "sachi77n@gmail.com"
  },
  "author": {
    "name": "Sachin",
    "email": "sachi77n@gmail.com",
    "url": "https://github.com/sachinchoolur"
  },
  "contributors": [
    {
      "name": "Roope Hakulinen",
      "email": "roope.hakulinen@gmail.com",
      "url": "https://github.com/RoopeHakulinen"
    },
    {
      "name": "Nicolas Coden",
      "email": "nicolas@ncoden.fr",
      "url": "https://github.com/ncoden"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:sachinchoolur/angular-flash.git"
  },
  "main": "index.js",
  "license": "MIT",
  "scripts": {
    "test": "grunt"
  },
  "dependencies": {
    "angular": "^1.4.8"
  },
  "devDependencies": {
    "angular-mocks": "^1.4.8",
    "babel-preset-es2015": "^6.3.13",
    "grunt": "^0.4.5",
    "grunt-babel": "^6.0.0",
    "grunt-banner": "^0.6.0",
    "grunt-bootlint": "^0.10.0",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-concat": "^0.5.0",
    "grunt-contrib-connect": "^0.9.0",
    "grunt-contrib-cssmin": "^0.12.1",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-uglify": "^0.7.0",
    "grunt-contrib-watch": "^0.6.1",
    "jasmine-core": "^2.4.1",
    "jshint-stylish": "^1.0.0",
    "karma": "^0.13.19",
    "karma-babel-preprocessor": "^6.0.1",
    "karma-chrome-launcher": "^0.2.2",
    "karma-firefox-launcher": "^0.1.7",
    "karma-jasmine": "^0.3.6",
    "load-grunt-tasks": "^2.0.0",
    "time-grunt": "^1.0.0"
  },
  "readme": "![license](https://img.shields.io/npm/l/angular-flash-alert.svg)\n![travis](https://travis-ci.org/sachinchoolur/angular-flash.svg?branch=master)\n![bower](https://img.shields.io/bower/v/angular-flash-alert.svg)\n![npm](https://img.shields.io/npm/v/angular-flash-alert.svg)\n# angular-flash \nA simple lightweight flash message module for AngularJS and Bootstrap.﻿\n\n\n## Demo\n[angular-flash](http://sachinchoolur.github.io/angular-flash/) | [jsfiddle](http://jsfiddle.net/roopehakulinen/uxeg4nze/) | [codepen](http://codepen.io/RoopeHakulinen/pen/QyZjxm)\n\n\n\n## Install\n\n#### npm\n\nYou can also find angular-flash on [npm](http://npmjs.org)\n\n```sh\n$ npm install angular-flash-alert\n```\n\n#### Bower\n\nYou can Install angular-flash using the [Bower](http://bower.io) package manager.\n\n```sh\n$ bower install angular-flash-alert --save\n```\n\nAdd the Following code to the &lt;head&gt; of your document.\n```html\n<link type=\"text/css\" rel=\"stylesheet\" href=\"dist/angular-flash.min.css\" />\n// If you are using bootstrap v3 no need to include angular-flash.css\n<script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js\"></script>\n<script src=\"dist/angular-flash.min.js\"></script>\n// Do not include both angular-flash.js and angular-flash.min.js\n```\nAdd `ngFlash` dependency to your module\n```javascript\nvar myApp = angular.module(\"app\", [\"ngFlash\"])\n```\nInclude directive below in your HTML template.\n```html\n<flash-message></flash-message> \n```\n\n## Configure\nYou can configure angular-flash by two ways:\n\nAdd attributes on the `<flash-message>` directive.\n```html\n<flash-message\n    duration=\"5000\"\n    show-close=\"true\"\n    on-dismiss=\"myCallback(flash);\"\n></flash-message> \n<!-- \n5000ms as the default duration to show flash message.\nShow the close button (x on the right).\nCall myCallback with flash dismissed as parameter when flash has been dismissed.\n-->\n```\n\nSet configuration with `flashProvider`.\n```javascript\napp.config((FlashProvider) => {\n    FlashProvider.setTimeout(5000);\n    FlashProvider.setShowClose(true);\n    FlashProvider.setOnDismiss(myCallback);\n});\n```\n\n#### Use a custom template\n\nBy default, angular-flash use the Bootstrap flash standard template, but you can set your own template.\n\n**By giving it in the Js**: use `.setTemplate(...)` with the template in parameter.\n```javascript\napp.config((FlashProvider) => {\n    FlashProvider.setTemplate(`\n        <div class=\"my-flash\">{{ flash.text }}</div>\n    `);\n});\n```\n\n**By giving it in the HTML**: use `.setTemplatePreset('transclude')` with the template transcluded in the `<flash-message>` directive.\n```javascript\napp.config((FlashProvider) => {\n    FlashProvider.setTemplatePreset('transclude');\n});\n```\n```html\n<flash-message>\n    <div class=\"my-flash\">{{ flash.text }}</div>\n</flash-message>\n```\n\n## How to use\nInject the `Flash` factory in your controller\n```javascript\nmyApp.controller('demoCtrl', ['Flash', function(Flash) {\n    $scope.successAlert = function () {\n        var message = '<strong>Well done!</strong> You successfully read this important alert message.';\n        var id = Flash.create('success', message, 0, {class: 'custom-class', id: 'custom-id'}, true);\n        // First argument (string) is the type of the flash alert.\n        // Second argument (string) is the message displays in the flash alert (HTML is ok).\n        // Third argument (number, optional) is the duration of showing the flash. 0 to not automatically hide flash (user needs to click the cross on top-right corner).\n        // Fourth argument (object, optional) is the custom class and id to be added for the flash message created. \n        // Fifth argument (boolean, optional) is the visibility of close button for this flash.\n        // Returns the unique id of flash message that can be used to call Flash.dismiss(id); to dismiss the flash message.\n    }\n}]);\n```\n####Flash types####\n+ success\n+ info\n+ warning\n+ danger\n\n#### Methods\nThese methods are mostly for internal usage but can be used also from outside.\n\n``` javascript\nFlash.dismiss(1);\n// Dismiss the flash with id of 1. Id is not the index of flash but instead a value returned by Flash.create()\n```\n\n``` javascript\nFlash.clear();\n// Dismisses all flashes shown.\n```\n\n#### Animating\nYou can animate the flash messages via traditional Angular way by including _ngAnimate_ as a dependency of your application and then defining the CSS transitions for different classes (_ng-enter_, _ng-move_, _ng-leave_) provided by Angular.\n\nExample:\n```\n.alert.ng-leave {\n  opacity: 1;\n  transition: opacity 1.5s ease-out;\n}\n.alert.ng-leave-active {\n  opacity: 0;\n}\n```\n\n#### [Guidelines for contributors](https://github.com/sachinchoolur/angular-flash/blob/master/contributing.md)\n\n#### Running tests\n```\nnpm install\n./node_modules/karma/bin/karma start\n```\n\n#### Contributors\n* [Sachin Choluur](https://github.com/sachinchoolur) (Original author)\n* [Roope Hakulinen](https://github.com/RoopeHakulinen) (Version 2)\n* [Nicolas Coden](https://github.com/ncoden)\n\n#### License\nMIT © [Sachin Choluur](https://twitter.com/sachinchoolur)\n",
  "readmeFilename": "README.md",
  "_id": "angular-flash-alert@2.3.0",
  "dist": {
    "shasum": "18673738982f61b36cc69429940d9bfedcd848e5"
  },
  "_from": "angular-flash-alert@",
  "_resolved": "https://registry.npmjs.org/angular-flash-alert/-/angular-flash-alert-2.3.0.tgz"
}
